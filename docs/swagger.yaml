basePath: /api/v1
definitions:
  handlers.BalanceResponse:
    properties:
      balance:
        example: "1000.00"
        type: string
    type: object
  handlers.ErrorResponse:
    properties:
      error:
        example: Error message
        type: string
    type: object
  handlers.MonthlyTotalResponse:
    properties:
      total:
        example: "1500.00"
        type: string
    type: object
  handlers.TransactionSummary:
    properties:
      category_id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      category_name:
        example: Groceries
        type: string
      total:
        example: "500.00"
        type: string
    type: object
  models.Account:
    properties:
      balance:
        type: number
      created_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      transactions:
        items:
          $ref: '#/definitions/models.Transaction'
        type: array
      type:
        $ref: '#/definitions/models.AccountType'
      updated_at:
        type: string
      user:
        allOf:
        - $ref: '#/definitions/models.User'
        description: Relationships
      user_id:
        type: string
    type: object
  models.AccountType:
    enum:
    - bank
    - cash
    - credit_card
    type: string
    x-enum-varnames:
    - AccountTypeBank
    - AccountTypeCash
    - AccountTypeCreditCard
  models.Category:
    properties:
      color:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      transactions:
        description: Relationships
        items:
          $ref: '#/definitions/models.Transaction'
        type: array
      type:
        $ref: '#/definitions/models.CategoryType'
      updated_at:
        type: string
    type: object
  models.CategoryType:
    enum:
    - income
    - expense
    type: string
    x-enum-varnames:
    - CategoryTypeIncome
    - CategoryTypeExpense
  models.Transaction:
    properties:
      account:
        $ref: '#/definitions/models.Account'
      account_id:
        type: string
      amount:
        type: number
      category:
        $ref: '#/definitions/models.Category'
      category_id:
        type: string
      created_at:
        type: string
      date:
        type: string
      description:
        type: string
      id:
        type: string
      updated_at:
        type: string
      user:
        allOf:
        - $ref: '#/definitions/models.User'
        description: Relationships
      user_id:
        type: string
    type: object
  models.User:
    properties:
      accounts:
        description: Relationships
        items:
          $ref: '#/definitions/models.Account'
        type: array
      created_at:
        type: string
      currency:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      transactions:
        items:
          $ref: '#/definitions/models.Transaction'
        type: array
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: A RESTful API for tracking personal expenses
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Expense Tracker API
  version: "1.0"
paths:
  /accounts:
    get:
      consumes:
      - application/json
      description: Get all accounts associated with a user
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Account'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get all accounts for a user
      tags:
      - accounts
    post:
      consumes:
      - application/json
      description: Create a new account for a user
      parameters:
      - description: Account object
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/models.Account'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Create a new account
      tags:
      - accounts
  /accounts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an account by its ID
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Delete account
      tags:
      - accounts
    get:
      consumes:
      - application/json
      description: Get account details by its ID
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get account by ID
      tags:
      - accounts
    put:
      consumes:
      - application/json
      description: Update account information by its ID
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      - description: Account object
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/models.Account'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Update account
      tags:
      - accounts
  /accounts/{id}/balance:
    get:
      consumes:
      - application/json
      description: Get the current balance of an account
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.BalanceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get account balance
      tags:
      - accounts
  /categories:
    get:
      consumes:
      - application/json
      description: Get all transaction categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get all categories
      tags:
      - categories
    post:
      consumes:
      - application/json
      description: Create a new transaction category
      parameters:
      - description: Category object
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Create a new category
      tags:
      - categories
  /categories/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a category by its ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Delete category
      tags:
      - categories
    get:
      consumes:
      - application/json
      description: Get category details by its ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get category by ID
      tags:
      - categories
    put:
      consumes:
      - application/json
      description: Update category information by its ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      - description: Category object
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Update category
      tags:
      - categories
  /categories/type/{type}:
    get:
      consumes:
      - application/json
      description: Get all categories of a specific type (income/expense)
      parameters:
      - description: Category Type (income/expense)
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get categories by type
      tags:
      - categories
  /transactions:
    get:
      consumes:
      - application/json
      description: Get transactions with optional filters and pagination
      parameters:
      - description: User ID
        in: query
        name: user_id
        type: string
      - description: Account ID
        in: query
        name: account_id
        type: string
      - description: Category ID
        in: query
        name: category_id
        type: string
      - description: Start Date (YYYY-MM-DD)
        in: query
        name: start_date
        type: string
      - description: End Date (YYYY-MM-DD)
        in: query
        name: end_date
        type: string
      - description: Minimum Amount
        in: query
        name: min_amount
        type: number
      - description: Maximum Amount
        in: query
        name: max_amount
        type: number
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Transaction'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get transactions with filters
      tags:
      - transactions
    post:
      consumes:
      - application/json
      description: Create a new transaction and update account balance
      parameters:
      - description: Transaction object
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/models.Transaction'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Create a new transaction
      tags:
      - transactions
  /transactions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a transaction by its ID
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Delete transaction
      tags:
      - transactions
    get:
      consumes:
      - application/json
      description: Get transaction details by its ID
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get transaction by ID
      tags:
      - transactions
    put:
      consumes:
      - application/json
      description: Update transaction information by its ID
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      - description: Transaction object
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/models.Transaction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Update transaction
      tags:
      - transactions
  /transactions/monthly-total:
    get:
      consumes:
      - application/json
      description: Get total transactions for a specific month
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month (1-12)
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.MonthlyTotalResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get monthly total
      tags:
      - transactions
  /transactions/summary:
    get:
      consumes:
      - application/json
      description: Get spending summary by category for a date range
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      - description: Start Date (YYYY-MM-DD)
        in: query
        name: start_date
        type: string
      - description: End Date (YYYY-MM-DD)
        in: query
        name: end_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.TransactionSummary'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get transaction summary
      tags:
      - transactions
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user with the provided information
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Delete user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get user details by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user information by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Update user
      tags:
      - users
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
